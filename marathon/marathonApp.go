package marathon

import "time"

type AutoGenerated struct {
	apps []MarathonApp `json:"apps"`
}

type MarathonApp struct {
	ID string `json:"id"`
	Cmd string `json:"cmd"`
	Args interface{} `json:"args"`
	User interface{} `json:"user"`
	Env struct {} `json:"env"`
	Instances int `json:"instances"`
	Cpus float64 `json:"cpus"`
	Mem int `json:"mem"`
	Disk int `json:"disk"`
	Executor string `json:"executor"`
	Constraints []interface{} `json:"constraints"`
	Uris []interface{} `json:"uris"`
	Fetch []interface{} `json:"fetch"`
	StoreUrls []interface{} `json:"storeUrls"`
	Ports []int `json:"ports"`
	PortDefinitions []struct {
		Port int `json:"port"`
		Protocol string `json:"protocol"`
		Labels struct {} `json:"labels"`
	} `json:"portDefinitions"`
	RequirePorts bool `json:"requirePorts"`
	BackoffSeconds int `json:"backoffSeconds"`
	BackoffFactor float64 `json:"backoffFactor"`
	MaxLaunchDelaySeconds int `json:"maxLaunchDelaySeconds"`
	Container interface{} `json:"container"`
	HealthChecks []interface{} `json:"healthChecks"`
	ReadinessChecks []interface{} `json:"readinessChecks"`
	Dependencies []interface{} `json:"dependencies"`
	UpgradeStrategy struct {
		   MinimumHealthCapacity int `json:"minimumHealthCapacity"`
		   MaximumOverCapacity int `json:"maximumOverCapacity"`
	   } `json:"upgradeStrategy"`
	Labels struct {} `json:"labels"`
	AcceptedResourceRoles interface{} `json:"acceptedResourceRoles"`
	IPAddress interface{} `json:"ipAddress"`
	Version time.Time `json:"version"`
	Residency interface{} `json:"residency"`
	VersionInfo struct {
		   LastScalingAt time.Time `json:"lastScalingAt"`
		   LastConfigChangeAt time.Time `json:"lastConfigChangeAt"`
	   } `json:"versionInfo"`
	TasksStaged int `json:"tasksStaged"`
	TasksRunning int `json:"tasksRunning"`
	TasksHealthy int `json:"tasksHealthy"`
	TasksUnhealthy int `json:"tasksUnhealthy"`
	Deployments []interface{} `json:"deployments"`
}